{
  "config": {
    "error": {
      "valid_credentials_api": "Provide valid API ID.",
      "valid_credentials_key": "Provide valid API KEY.",
      "valid_credentials_match": "API ID and API KEY should not be the same."
    },

    "step": {
      "user": {
        "description": "Provide API ID and API KEY so the Weather Station can access HomeAssistant",
        "title": "Configure access for Weather Station",
        "data": {
          "API_ID": "API ID / Station ID",
          "API_KEY": "API KEY / Password",
          "WSLINK": "WSLink API",
          "dev_debug_checkbox": "Developer log"
        },
        "data_description": {
          "dev_debug_checkbox": " Enable only if you want to send debuging data to the developer.",
          "API_ID": "API ID is the Station ID you set in the Weather Station.",
          "API_KEY": "API KEY is the password you set in the Weather Station.",
          "WSLINK": "Enable WSLink API if the station is set to send data via WSLink."
        }
      }
    }
  },

  "options": {
    "error": {
      "valid_credentials_api": "Provide valid API ID.",
      "valid_credentials_key": "Provide valid API KEY.",
      "valid_credentials_match": "API ID and API KEY should not be the same.",
      "windy_key_required": "Windy API key is required if you want to enable this function."
    },

    "step": {
      "init": {
        "title": "Configure SWS12500 Integration",
        "description": "Choose what do you want to configure. If basic access or resending data for Windy site",
        "menu_options": {
          "basic": "Basic - configure credentials for Weather Station",
          "windy": "Windy configuration"
        }
      },

      "basic": {
        "description": "Provide API ID and API KEY so the Weather Station can access HomeAssistant",
        "title": "Configure credentials",
        "data": {
          "API_ID": "API ID / Station ID",
          "API_KEY": "API KEY / Password",
          "WSLINK": "WSLink API",
          "dev_debug_checkbox": "Developer log"
        },
        "data_description": {
          "dev_debug_checkbox": " Enable only if you want to send debuging data to the developer.",
          "API_ID": "API ID is the Station ID you set in the Weather Station.",
          "API_KEY": "API KEY is the password you set in the Weather Station.",
          "WSLINK": "Enable WSLink API if the station is set to send data via WSLink."
        }
      },

      "windy": {
        "description": "Resend weather data to your Windy stations.",
        "title": "Configure Windy",
        "data": {
          "WINDY_API_KEY": "API KEY provided by Windy",
          "windy_enabled_checkbox": "Enable resending data to Windy",
          "windy_logger_checkbox": "Log Windy data and responses"
        },
        "data_description": {
          "WINDY_API_KEY": "Windy API KEY obtained from https://https://api.windy.com/keys",
          "windy_logger_checkbox": "Enable only if you want to send debuging data to the developer."
        }
      },
      "migration": {
        "title": "Statistic migration.",
        "description": "For the correct functioning of long-term statistics, it is necessary to migrate the sensor unit in the long-term statistics. The original unit of long-term statistics for daily precipitation was in mm/d, however, the station only sends data in mm without time differentiation.\n\n The sensor to be migrated is for daily precipitation. If the correct value is already in the list for the daily precipitation sensor (mm), then the migration is already complete.\n\n Migration result for the sensor: {migration_status}, a total of {migration_count} rows converted.",
        "data": {
          "sensor_to_migrate": "Sensor to migrate",
          "trigger_action": "Trigger migration"
        },
        "data_description": {
          "sensor_to_migrate": "Select the correct sensor for statistics migration.\nThe sensor values will be preserved, they will not be recalculated, only the unit in the long-term statistics will be changed.",
          "trigger_action": "Trigger the sensor statistics migration after checking."
        }
      }
    }
  },

  "entity": {
    "sensor": {
      "indoor_temp": { "name": "Indoor temperature" },
      "indoor_humidity": { "name": "Indoor humidity" },
      "outside_temp": { "name": "Outside Temperature" },
      "outside_humidity": { "name": "Outside humidity" },
      "uv": { "name": "UV index" },
      "baro_pressure": { "name": "Barometric pressure" },
      "dew_point": { "name": "Dew point" },
      "wind_speed": { "name": "Wind speed" },
      "wind_dir": { "name": "Wind direction" },
      "wind_gust": { "name": "Wind gust" },
      "rain": { "name": "Rain" },
      "daily_rain": { "name": "Daily precipitation" },
      "solar_radiation": { "name": "Solar irradiance" },
      "ch2_temp": { "name": "Channel 2 temperature" },
      "ch2_humidity": { "name": "Channel 2 humidity" },
      "ch3_temp": { "name": "Channel 3 temperature" },
      "ch3_humidity": { "name": "Channel 3 humidity" },
      "ch4_temp": { "name": "Channel 4 temperature" },
      "ch4_humidity": { "name": "Channel 4 humidity" },
      "heat_index": { "name": "Apparent temperature" },
      "chill_index": { "name": "Wind chill" },
      "wind_azimut": {
        "name": "Bearing",
        "state": {
          "n": "N",
          "nne": "NNE",
          "ne": "NE",
          "ene": "ENE",
          "e": "E",
          "ese": "ESE",
          "se": "SE",
          "sse": "SSE",
          "s": "S",
          "ssw": "SSW",
          "sw": "SW",
          "wsw": "WSW",
          "w": "W",
          "wnw": "WNW",
          "nw": "NW",
          "nnw": "NNW"
        }
      }
    }
  },
  "notify": {
    "added": {
      "title": "New sensors for SWS 12500 found.",
      "message": "{added_sensors}\n"
    }
  }
}
